{"mappings":"AA8CA,MAAMA,EAAaC,SAASC,cAAc,YACpCC,EAAQF,SAASC,cAAc,aACrC,IAAIE,EAAO,EAEX,SAASC,EAAaC,EAAO,GAKzB,OAAOC,MAAM,kGAAmDD,KAAQE,MAAMC,IAC1E,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAMF,EAASG,QAEzB,OAAOH,EAASI,MAAM,G,CAS9B,SAASC,EAAaC,GAClB,OAAOA,EAAIC,KAAI,EAACC,GAAEA,EAAEC,MAAEA,EAAKC,YAAEA,KAClB,gCAAgCF,2DACME,WAAqBD,sBAC1DA,0BAETE,KAAK,G,CAXZf,IAAeG,MAAMa,IACjBrB,EAAWsB,mBAAmB,YAAaR,EAAaO,EAAKE,UAC7DC,EAASC,QAAQtB,EAAM,IAgC3B,MAAMqB,EAAW,IAAIE,sBAdrB,SAAkBC,EAASC,GACvBD,EAAQE,SAAQC,IACRA,EAAMC,iBACN3B,GAAQ,EACRC,EAAaD,GAAMI,MAAMa,IACrBrB,EAAWsB,mBAAmB,YAAaR,EAAaO,EAAKE,UACzDF,EAAKW,MAAQ,KACbJ,EAASK,UAAU9B,EAAM,I,MAb7B,CACZ+B,KAAM,KACNC,WAAY,QACZC,UAAW","sources":["src/js/index.js"],"sourcesContent":["// const moviesList = document.querySelector('.js-list');\n// const btnLoad = document.querySelector('.js-btn');\n// let page = 498;\n\n// function serviceMovie(page = 1) {\n//     const BASE_URL = 'https://api.themoviedb.org/3';\n//     const END_POINT = '/trending/movie/week';\n//     const API_KEY = '345007f9ab440e5b86cef51be6397df1';\n     \n//     return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}`).then((response) => {\n//         if (!response.ok) {\n//         throw new Error(response.status)\n//         }\n//         return response.json();\n// })\n// };\n\n// serviceMovie().then((data) => {\n//     moviesList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//     btnLoad.hidden = false;\n// });\n\n// btnLoad.addEventListener('click', handlerBtnLoadMore);\n\n// function handlerBtnLoadMore() {\n//     page += 1;\n//     serviceMovie(page).then((data) => {\n//         moviesList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//         if (data.page >= 500) {\n//             btnLoad.hidden = true;\n//         }\n//     }); \n// };\n\n\n// function createMarkup(arr) {\n//     return arr.map(({ id, title, poster_path }) => {\n//         return `<li class=\"js-item\" data-id='${id}'>\n//           <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n//           <h3>${title}</h3>\n//         </li>`\n//     }).join('');\n// };\n\n// ===============================PAGINATION WITH INFINITY SCROLL====================\n\nconst moviesList = document.querySelector('.js-list');\nconst quard = document.querySelector('.js-quard');\nlet page = 1;\n\nfunction serviceMovie(page = 1) {\n    const BASE_URL = 'https://api.themoviedb.org/3';\n    const END_POINT = '/trending/movie/week';\n    const API_KEY = '345007f9ab440e5b86cef51be6397df1';\n     \n    return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}`).then((response) => {\n        if (!response.ok) {\n        throw new Error(response.status)\n        }\n        return response.json();\n})\n};\n\nserviceMovie().then((data) => {\n    moviesList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(quard);\n});\n\nfunction createMarkup(arr) {\n    return arr.map(({ id, title, poster_path }) => {\n        return `<li class=\"js-item\" data-id='${id}'>\n          <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n          <h3>${title}</h3>\n        </li>`\n    }).join('');\n};\n\nconst options = {\n    root: null,\n    rootMargin: '500px',\n    threshold: 0,\n};\n\nfunction loadMore(entries, observer) {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            page += 1;\n            serviceMovie(page).then((data) => {\n                moviesList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n                if (data.page >= 500) {\n                    observer.unobserve(quard);\n                }\n            })\n         };\n    });\n}\n\nconst observer = new IntersectionObserver(loadMore, options);\n\n "],"names":["$85a5f86b715fe7db$var$moviesList","document","querySelector","$85a5f86b715fe7db$var$quard","$85a5f86b715fe7db$var$page","$85a5f86b715fe7db$var$serviceMovie","page1","fetch","then","response","ok","Error","status","json","$85a5f86b715fe7db$var$createMarkup","arr","map","id","title","poster_path","join","data","insertAdjacentHTML","results","$85a5f86b715fe7db$var$observer","observe","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","page","unobserve","root","rootMargin","threshold"],"version":3,"file":"index.27e88242.js.map"}